// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_geohash_encode
Rcpp::CharacterVector cpp_geohash_encode(Rcpp::NumericVector lat, Rcpp::NumericVector lng, int precision);
RcppExport SEXP _geohashr_cpp_geohash_encode(SEXP latSEXP, SEXP lngSEXP, SEXP precisionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lat(latSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lng(lngSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_geohash_encode(lat, lng, precision));
    return rcpp_result_gen;
END_RCPP
}
// cpp_geohash_decode
Rcpp::DataFrame cpp_geohash_decode(Rcpp::CharacterVector hash);
RcppExport SEXP _geohashr_cpp_geohash_decode(SEXP hashSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type hash(hashSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_geohash_decode(hash));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geohashr_cpp_geohash_encode", (DL_FUNC) &_geohashr_cpp_geohash_encode, 3},
    {"_geohashr_cpp_geohash_decode", (DL_FUNC) &_geohashr_cpp_geohash_decode, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_geohashr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
